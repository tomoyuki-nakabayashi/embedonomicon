
app:	file format ELF32-arm-little

Disassembly of section .text:
main:
	trap
	trap

Reset:
	movw	r1, #0x0
	movw	r0, #0x0
	movt	r1, #0x2000
	movt	r0, #0x2000
	subs	r1, r1, r0
	bl	#0xd2
	movw	r1, #0x0
	movw	r0, #0x0
	movt	r1, #0x2000
	movt	r0, #0x2000
	subs	r2, r1, r0
	movw	r1, #0x0
	movt	r1, #0x0
	bl	#0x8
	bl	#-0x3c
	trap

DefaultExceptionHandler:
	b	#-0x4 <DefaultExceptionHandler>

UsageFault:
	sub	sp, #0x19c

__aeabi_memcpy:
	push	{r4, r5, r7, lr}
	cbz	r2, #0x56
	subs	r3, r2, #0x1
	and	r12, r2, #0x3
	cmp	r3, #0x3
	bhs	#0x8 <__aeabi_memcpy+0x18>
	movs	r2, #0x0
	cmp.w	r12, #0x0
	bne	#0x26 <__aeabi_memcpy+0x3e>
	b	#0x42 <__aeabi_memcpy+0x5c>
	sub.w	lr, r2, r12
	movs	r2, #0x0
	ldrb	r3, [r1, r2]
	adds	r4, r1, r2
	strb	r3, [r0, r2]
	adds	r3, r0, r2
	adds	r2, #0x4
	ldrb	r5, [r4, #0x1]
	cmp	lr, r2
	strb	r5, [r3, #0x1]
	ldrb	r5, [r4, #0x2]
	strb	r5, [r3, #0x2]
	ldrb	r4, [r4, #0x3]
	strb	r4, [r3, #0x3]
	bne	#-0x1c <__aeabi_memcpy+0x1e>
	cmp.w	r12, #0x0
	beq	#0x1c <__aeabi_memcpy+0x5c>
	ldrb	r3, [r1, r2]
	cmp.w	r12, #0x1
	strb	r3, [r0, r2]
	beq	#0x12 <__aeabi_memcpy+0x5c>
	adds	r3, r2, #0x1
	cmp.w	r12, #0x2
	ldrb	r5, [r1, r3]
	strb	r5, [r0, r3]
	it	eq
	popeq	{r4, r5, r7, pc}
	adds	r2, #0x2
	ldrb	r1, [r1, r2]
	strb	r1, [r0, r2]
	pop	{r4, r5, r7, pc}

__aeabi_memset:
	cmp	r1, #0x0
	it	eq
	bxeq	lr
	push	{r7, lr}
	subs	r3, r1, #0x1
	and	r12, r1, #0x3
	cmp	r3, #0x3
	bhs	#0x2 <__aeabi_memset+0x16>
	movs	r1, #0x0
	b	#0x14 <__aeabi_memset+0x2c>
	sub.w	lr, r1, r12
	movs	r1, #0x0
	strb	r2, [r0, r1]
	adds	r3, r0, r1
	adds	r1, #0x4
	cmp	lr, r1
	strb	r2, [r3, #0x3]
	strb	r2, [r3, #0x2]
	strb	r2, [r3, #0x1]
	bne	#-0x12 <__aeabi_memset+0x1c>
	cmp.w	r12, #0x0
	pop.w	{r7, lr}
	itt	ne
	strbne	r2, [r0, r1]
	cmpne.w	r12, #0x1
	bne	#0x0 <__aeabi_memset+0x40>
	bx	lr
	add	r0, r1
	cmp.w	r12, #0x2
	strb	r2, [r0, #0x1]
	it	ne
	strbne	r2, [r0, #0x2]
	bx	lr

__aeabi_memclr:
	movs	r2, #0x0
	b.w	#-0x54 <__aeabi_memset>
